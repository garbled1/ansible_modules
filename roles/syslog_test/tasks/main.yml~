# - name: Test syslog
#   syslogger:
#     msg: "Hello from ansible"
#     priority: "err"
#     facility: "daemon"
#     log_pid: true

- name: Create an incident
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev38191
    state: present
    data:
      short_description: "This is a test incident opened by Ansible"
      severity: 3
      priority: 2
  register: new_incident

- name: Delete a non-existant record
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev38191
    state: absent
    number: 9872354
  failed_when: false

- name: Delete the record we just made
  snow_record:
    username: admin
    password: Thermal1
    instance: dev38191
    state: absent
#    number: "{{new_incident['record']['number']}}"
    number: INC0000055

- name: Update an incident
  snow_record:
    username: ansible_test
    password: my_password
    instance: dev38191
    state: updated
    number: INC0000055
    data:
      work_notes : "Been working all day on this thing."

# - name: Get an incident, return all fields
#   snow_get_record:
#     username: ansible_test
#     password: my_password
#     instance: dev38191
#     number: INC0000055
#     table: incident

# - name: Search for incident assigned to group, return specific fields
#   snow_search_records:
#     username: ansible_test
#     password: my_password
#     instance: dev38191
#     table: incident
#     query_field: assignment_group
#     query_string: d625dccec0a8016700a222a0f7900d06
#     return_fields:
#       - number
#       - opened_at
#       - state

# - name: Search for incident in state 1, return specific fields
#   snow_search_records:
#     username: ansible_test
#     password: my_password
#     instance: dev38191
#     table: incident
#     query_field: state
#     query_string: 1
#     return_fields:
#       - number
#       - opened_at
#       - state
